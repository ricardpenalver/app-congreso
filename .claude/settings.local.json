{
  "permissions": {
    "allow": [
      "mcp__playwright-server__browser_navigate",
      "mcp__playwright-server__browser_take_screenshot",
      "mcp__playwright-server__browser_type",
      "mcp__playwright-server__browser_click",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: Restaurar funcionalidad de checkbox de aviso legal en formulario de bienvenida\n\nProblema detectado:\n- La funcionalidad del checkbox de aviso legal se perdiÃ³ en el commit 29ff332\n  \"Refactor: Revertir acceso pÃºblico solo a pÃ¡ginas de proyecciÃ³n\" (20-10-2025)\n- Este commit hizo cambios masivos (454 inserciones, 285 eliminaciones) que\n  eliminaron accidentalmente toda la validaciÃ³n de aviso legal\n\nCambios restaurados:\nâœ… CSS:\n  - Estilos del checkbox de aviso legal (.legal-checkbox)\n  - Estilos del mensaje de aviso legal requerido (.legal-required-message)\n  - Animaciones y transiciones para UX fluida\n\nâœ… HTML:\n  - Checkbox \"He leÃ­do y acepto el aviso legal\" en el formulario\n  - Mensaje amigable cuando no se acepta el aviso legal\n  - BotÃ³n \"Volver al formulario\"\n  - Cambio del texto del botÃ³n de \"Comenzar experiencia\" a \"Acceder\"\n\nâœ… JavaScript:\n  - ValidaciÃ³n del checkbox en submitWelcome()\n  - FunciÃ³n showLegalRequiredMessage() para mostrar mensaje\n  - FunciÃ³n backToWelcomeForm() para volver al formulario\n  - IntegraciÃ³n completa con el flujo de registro\n\nFlujo de usuario:\n1. Usuario rellena nombre y email\n2. Debe marcar checkbox de aviso legal\n3. Si NO marca el checkbox y hace clic en \"Acceder\":\n   â†’ Muestra mensaje amigable explicando la necesidad del aviso legal\n   â†’ BotÃ³n para volver al formulario\n4. Si marca el checkbox:\n   â†’ Proceso de registro continÃºa normalmente\n\nReferencias:\n- Commit original con esta funcionalidad: f3600d3 (18-10-2025)\n- Commit que eliminÃ³ la funcionalidad: 29ff332 (20-10-2025)\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "context7",
    "playwright-server"
  ],
  "hooks": {
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "./.git-proxy-auto.sh && git pull"
          }
        ]
      }
    ],
    "SessionEnd": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "if git diff --quiet && git diff --cached --quiet; then echo 'No changes to commit'; else git add . && git status; fi"
          }
        ]
      }
    ]
  }
}
